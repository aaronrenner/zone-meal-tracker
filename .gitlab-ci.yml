image: registry.gitlab.com/aaronrenner/docker-asdf:alpine

variables:
  LANG: C.UTF-8
  MIX_HOME: "$CI_PROJECT_DIR/.mix"
  ASDF_DATA_DIR: "$CI_PROJECT_DIR/.asdf"
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: postgres

stages:
  - install
  - build
  - test

before_script:
  - . ~/.asdf/asdf.sh
  # Ensure the timestamp doesn't change from when the repo was
  # originally checked out, so we don't have to recompile for each job.
  - |
    if [ -f ".cloned_at" ]; then
      git ls-files | xargs touch --date "$(cat .cloned_at)";
    fi

install_asdf_env_and_deps:
  image: registry.gitlab.com/aaronrenner/docker-asdf:bionic
  stage: install
  variables:
    NODEJS_CHECK_SIGNATURES: "no"
  cache:
    key: install
    paths:
      - $ASDF_DATA_DIR
      - $MIX_HOME
  script:
    - asdf plugin-add erlang || true
    - asdf plugin-add elixir || true
    - asdf plugin-add nodejs || true
    # Have to run twice due to: https://github.com/asdf-vm/asdf-erlang/issues/57
    - asdf install && asdf install
    # Setting up elixir and erlang
    - mix local.hex --force
    - mix local.rebar --force
    # Cache the timestamp the repo was originally checked out, so it can
    # be set back to this in later jobs and allows us to skip unnecessary
    # recompiles.
    - date "+%Y-%m-%d %H:%M:%S" -r README.md > .cloned_at
  artifacts:
    expire_in: 2 hrs
    paths:
      - $ASDF_DATA_DIR
      - $MIX_HOME
      - .cloned_at

install_asdf_env_and_deps_alpine:
  stage: install
  image: registry.gitlab.com/aaronrenner/docker-asdf:alpine
  variables:
    NODEJS_CHECK_SIGNATURES: "no"
    BUILD_CACHE_VERSION: 1
  cache:
    key: install-alpine-$BUILD_CACHE_VERSION
    paths:
      - $ASDF_DATA_DIR
      - $MIX_HOME
  script:
    - asdf plugin-add erlang || true
    - asdf plugin-add elixir || true
    - asdf plugin-add nodejs || true
    # Have to run twice due to: https://github.com/asdf-vm/asdf-erlang/issues/57
    - asdf install && asdf install
    # Setting up elixir and erlang
    - mix local.hex --force
    - mix local.rebar --force
    # Cache the timestamp the repo was originally checked out, so it can
    # be set back to this in later jobs and allows us to skip unnecessary
    # recompiles.
    - date "+%Y-%m-%d %H:%M:%S" -r README.md > .cloned_at
  artifacts:
    expire_in: 2 hrs
    paths:
      - $ASDF_DATA_DIR
      - $MIX_HOME
      - .cloned_at

.build:
  stage: build
  variables:
    BUILD_CACHE_VERSION: 1
  cache:
    key: $CI_JOB_NAME-$BUILD_CACHE_VERSION
    paths:
      - "_build"
      - "deps"
  script:
    - mix do deps.get, compile --warnings-as-errors
  dependencies:
    - install_asdf_env_and_deps_alpine
  artifacts:
    expire_in: 2 hrs
    paths:
      - "_build"
      - "deps"

build:dev:
  extends: .build

build:test:
  extends: .build
  variables:
    MIX_ENV: test

build:production_container:
  extends: .build
  variables:
    MIX_ENV: prod
  script:
    - mix do deps.get, compile --warnings-as-errors

build:integration_tester:
  stage: build
  image: registry.gitlab.com/aaronrenner/docker-asdf:bionic
  cache:
    key: $CI_JOB_NAME
    paths:
      - "integration_tester/_build"
      - "integration_tester/deps"
  variables:
    MIX_ENV: test
  dependencies:
    - install_asdf_env_and_deps
  script:
    - |
        pushd apps/zone_meal_tracker_web/assets && \
        npm install && \
        popd
    - |
        pushd apps/zone_meal_tracker_web && \
        mix deps.get && \
        npm run deploy --prefix ./assets && \
        popd
    - |
        pushd integration_tester && \
        mix do deps.get, compile --warnings-as-errors && \
        popd
  dependencies:
    - install_asdf_env_and_deps
  artifacts:
    expire_in: 2 hrs
    paths:
      - "integration_tester/_build"
      - "integration_tester/deps"
      - "apps/zone_meal_tracker_web/priv/static"

unit_tests:
  stage: test
  script: mix test
  services:
    - postgres:11.5-alpine
  dependencies:
    - install_asdf_env_and_deps_alpine
    - build:test

integration_tests:
  stage: test
  image: registry.gitlab.com/aaronrenner/docker-asdf:bionic
  script:
    - |
        mkdir /tmp/chromedriver && \
        pushd /tmp/chromedriver && \
        curl -O https://chromedriver.storage.googleapis.com/77.0.3865.40/chromedriver_linux64.zip && \
        unzip chromedriver_linux64.zip && \
        mv chromedriver /usr/local/bin &&
        popd
    - |
        pushd /tmp && \
        curl -O https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \
        apt-get update && \
        (dpkg -i google-chrome-stable_current_amd64.deb || true) && \
        apt-get -f -y install && \
        popd
    - cd integration_tester
    - MIX_ENV=test mix test
  services:
    - postgres:11.5-alpine
  dependencies:
    - install_asdf_env_and_deps
    - build:integration_tester

integration_test_linters:
  stage: test
  script:
    - cd integration_tester
    - mix format --check-formatted
    # Check for unused dependencies
    - mix deps.unlock --unused && git diff --exit-code
  dependencies:
    - install_asdf_env_and_deps_alpine
    - build:integration_tester

linters:
  stage: test
  script:
    - mix format --check-formatted
    - mix credo --strict
    # Check for unused dependencies
    - mix deps.unlock --unused && git diff --exit-code
  dependencies:
    - install_asdf_env_and_deps_alpine
    - build:dev

dialyzer:
  stage: test
  variables:
    DIALYZER_CACHE_VERSION: 1
  # --format short can't be used here due to: https://github.com/jeremyjh/dialyxir/issues/314
  # --list-unused-filters must be used as a command line option instead of in
  #      mix.exs due to: https://github.com/jeremyjh/dialyxir/issues/313
  script: mix dialyzer --list-unused-filters --halt-exit-status
  cache:
    key: $CI_JOB_NAME-$DIALYZER_CACHE_VERSION
    paths:
      - "_build/dev/*.plt"
      - "_build/dev/*.plt.hash"
      - $MIX_HOME/*.plt
  dependencies:
    - install_asdf_env_and_deps_alpine
    - build:dev
